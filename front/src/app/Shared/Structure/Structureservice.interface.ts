/**
* NOTE: This class is auto generated by the template angular2-typescript-service-interface.cshtml.
* Do not edit the class manually.
* * OpenAPI spec version: 0.
* Do not edit the class manually.
*/

import { Headers } from '@angular/http';
import { Observable } from 'rxjs/Observable';
import { Configuration } from '../configuration.model';
import { ApplicationStructure } from '../SchemaApi/Models/Structures/ApplicationStructure';

export interface IStructure {
   defaultHeaders: Headers;
   configuration: Configuration;
   [others: string]: any;

      /**
      * SchemaApi.Controllers.StructureController.List (SchemaApi)
      */

      List() : Observable<Array<String>>;
      /**
      * SchemaApi.Controllers.StructureController.Read (SchemaApi)
      */

      Read(application : String, name : String) : Observable<ApplicationStructure>;
      /**
      * SchemaApi.Controllers.StructureController.Create (SchemaApi)
      */

      Create(application : String, name : String) : Observable<{}>;
      /**
      * SchemaApi.Controllers.StructureController.Update (SchemaApi)
      */

      Update(application : String, lockid : String, item : ApplicationStructure) : Observable<{}>;
      /**
      * SchemaApi.Controllers.StructureController.Lock (SchemaApi)
      */

      Lock(application : String, name : String) : Observable<String>;
      /**
      * SchemaApi.Controllers.StructureController.UnLock (SchemaApi)
      */

      UnLock(application : String, name : String, lockid : String) : Observable<{}>;
      /**
      * SchemaApi.Controllers.StructureController.Delete (SchemaApi)
      */

      Delete(application : String, name : String, lockid : String) : Observable<{}>;
}

